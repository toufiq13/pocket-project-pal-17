{
  "info": {
    "name": "LuxInnovate Interiors API",
    "description": "Load testing collection for LuxInnovate Interiors platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://your-project.supabase.co/functions/v1",
      "type": "string"
    },
    {
      "key": "apiKey",
      "value": "your-anon-key",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function() {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.exist;",
                  "    pm.collectionVariables.set('authToken', response.access_token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/v1/token?grant_type=password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "v1", "token"],
              "query": [
                {
                  "key": "grant_type",
                  "value": "password"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response time < 200ms', function() {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rest/v1/products?select=*",
              "host": ["{{baseUrl}}"],
              "path": ["rest", "v1", "products"],
              "query": [
                {
                  "key": "select",
                  "value": "*"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "Create Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment created successfully', function() {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.collectionVariables.set('transactionId', response.payment.transaction_id);",
                  "});",
                  "",
                  "pm.test('Response time < 500ms', function() {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"create\",\n  \"orderId\": \"order_{{$randomUUID}}\",\n  \"amount\": 1000,\n  \"paymentMethod\": \"card\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/process-payment",
              "host": ["{{baseUrl}}"],
              "path": ["process-payment"]
            }
          }
        },
        {
          "name": "Verify Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment verified successfully', function() {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.verified).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"verify\",\n  \"transactionId\": \"{{transactionId}}\",\n  \"orderId\": \"order_123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/process-payment",
              "host": ["{{baseUrl}}"],
              "path": ["process-payment"]
            }
          }
        }
      ]
    },
    {
      "name": "ML Recommendations",
      "item": [
        {
          "name": "Get Recommendations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Recommendations returned', function() {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Response time < 400ms', function() {",
                  "    pm.expect(pm.response.responseTime).to.be.below(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"user_123\",\n  \"limit\": 6\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/get-recommendations",
              "host": ["{{baseUrl}}"],
              "path": ["get-recommendations"]
            }
          }
        }
      ]
    },
    {
      "name": "Load Tests",
      "item": [
        {
          "name": "Concurrent Product Views",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time acceptable under load', function() {",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rest/v1/products?select=*&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["rest", "v1", "products"],
              "query": [
                {
                  "key": "select",
                  "value": "*"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Security Tests",
      "item": [
        {
          "name": "SQL Injection Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('SQL injection blocked', function() {",
                  "    pm.response.to.have.status([400, 403]);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/rest/v1/products?name=eq.'; DROP TABLE products; --",
              "host": ["{{baseUrl}}"],
              "path": ["rest", "v1", "products"],
              "query": [
                {
                  "key": "name",
                  "value": "eq.'; DROP TABLE products; --"
                }
              ]
            }
          }
        },
        {
          "name": "Rate Limit Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Rate limit enforced', function() {",
                  "    // After many requests, should get 429",
                  "    const status = pm.response.code;",
                  "    pm.expect([200, 429]).to.include(status);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "apikey",
                "value": "{{apiKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"create\",\n  \"orderId\": \"test\",\n  \"amount\": 100,\n  \"paymentMethod\": \"card\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/process-payment",
              "host": ["{{baseUrl}}"],
              "path": ["process-payment"]
            }
          }
        }
      ]
    }
  ]
}
